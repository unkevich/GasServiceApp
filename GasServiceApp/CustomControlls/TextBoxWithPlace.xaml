<UserControl x:Class="GasServiceApp.CustomControlls.TextBoxWithPlace"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GasServiceApp.CustomControlls"
             mc:Ignorable="d" 
             MinWidth="300"
             x:Name="_this">
    <UserControl.Resources>

        <Style x:Key="credentialsTxTtitleStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource cs_Foreground_Gray_Two}"/>
            <Setter Property="FontSize" Value="20"/>

            <!-- Since we want to reuse this control we will use property binding for our placeholder -->
            <Setter Property="Text" Value="{Binding PlaceHolder, ElementName=_this}"/>
            <Setter Property="Padding" Value="2,0"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, ElementName=email}" Value="">

                    <!-- Default Postion and fontsize of Title -->
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard SpeedRatio="10">
                                <DoubleAnimation Storyboard.TargetProperty="FontSize" To="14"/>
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" To="0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>

                    <!-- Position and Fontsize of Title when Email Textbox has value -->
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard SpeedRatio="10">
                                <DoubleAnimation Storyboard.TargetProperty="FontSize" To="13"/>
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" To="0 0 0 20"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="credentialsTxTStyle" TargetType="{x:Type TextBox}">
            <!-- same goes for text -->
            <Setter Property="Text" Value="{Binding Text, Mode=TwoWay, ElementName=_this}"/>
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource cs_Foreground_Gray_Two}"/>
            <Setter Property="BorderThickness" Value="0"/>

            <!-- We also need to move our text some point below and also increase font size -->
            <Style.Triggers>

                <!-- So, to  know when to trigger we will first check what is the font size of our title -->
                <!-- if it is 15pt then it means the title in above -->
                <DataTrigger Binding="{Binding FontSize, ElementName=title}" Value="13">

                    <!-- Default Postion and fontsize of Title -->
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard SpeedRatio="10">
                                <DoubleAnimation Storyboard.TargetProperty="FontSize" To="14"/>
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" To="0 10 0 0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>

                    <!-- Position and Fontsize of Title when Email Textbox has value -->
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard SpeedRatio="10">
                                <DoubleAnimation Storyboard.TargetProperty="FontSize" To="13"/>
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" To="0 12 0 20"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>

                <!-- get password inside the textbox if the textbox text is empty -->
                <DataTrigger Binding="{Binding Text, Mode=TwoWay, ElementName=_this}" Value="">
                    <Setter Property="Text" Value="{Binding Password, ElementName=passbox}"/>
                </DataTrigger>

                <!-- also show only when the Show password Button is pressed -->
                <!-- if password bot is visible then hide textbox -->

                <DataTrigger Binding="{Binding Visibility, ElementName=passbox}" Value="Visible">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>

            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type PasswordBox}">
            <Setter Property="Padding" Value="2,0,30,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Regular"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource cs_Foreground_Gray_Two}"/>
            <Setter Property="BorderThickness" Value="0"/>

            <!-- We also need to move our text some point below and also increase font size -->
            <Style.Triggers>

                <!-- So, to  know when to trigger we will first check what is the font size of our title -->
                <!-- if it is 15pt then it means the title in above -->
                <DataTrigger Binding="{Binding FontSize, ElementName=title}" Value="13">

                    <!-- Default Postion and fontsize of Title -->
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard SpeedRatio="10">
                                <DoubleAnimation Storyboard.TargetProperty="FontSize" To="14"/>
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" To="0 10 0 0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>

                    <!-- Position and Fontsize of Title when Email Textbox has value -->
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard SpeedRatio="10">
                                <DoubleAnimation Storyboard.TargetProperty="FontSize" To="13"/>
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" To="0 12 0 20"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>

                <!-- hide password if the IsPassword - false -->
                <DataTrigger Binding="{Binding IsPassword, ElementName=_this}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>

                <!-- also hide when the Show password Button is pressed -->
                <DataTrigger Binding="{Binding IsPressed, ElementName=showPass}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>

            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource cs_Foreground_Gray}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <Path
                                Width="20"
                                Stretch="Uniform"
                                Fill="{TemplateBinding Foreground}"
                                Data="{StaticResource showPass}"/>
                        </Border>
                        <ControlTemplate.Triggers>

                            <!-- hide button is not IsPassword -->
                            <DataTrigger Binding="{Binding IsPassword, ElementName=_this}" Value="false">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Border
        CornerRadius="5"
        Background="{StaticResource cs_Background_BtnGray}"
        BorderBrush="Transparent"
        BorderThickness="1"
        Height="55">
        <Grid Margin="20,3">
            <!-- Title -->
            <TextBlock
                x:Name="title"
                Style="{StaticResource credentialsTxTtitleStyle}"/>

            <!-- Textbox -->
            <TextBox
                x:Name="email"
                Style="{StaticResource credentialsTxTStyle}"/>

            <!-- to detect if our textbox is password bot or not we will use a bool -->

            <!-- If we want to use this textbox as password box then ... -->
            <!-- To update textbox on password change -->
            <PasswordBox
                x:Name="passbox"
                PasswordChanged="passbox_PasswordChanged"/>

            <!-- and button to toggle show/hide password -->
            <Button x:Name="showPass"/>

        </Grid>
    </Border>
</UserControl>
